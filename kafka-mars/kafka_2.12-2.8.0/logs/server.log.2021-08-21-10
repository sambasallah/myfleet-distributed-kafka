[2021-08-21 10:05:48,680] INFO [ReplicaFetcherManager on broker 87] Removed fetcher for partitions Set(myfleet_sedat001_error_log-0) (kafka.server.ReplicaFetcherManager)
[2021-08-21 10:05:48,683] INFO [Log partition=myfleet_sedat001_error_log-0, dir=/home/thisara/kafka-mars/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2021-08-21 10:05:48,684] INFO Created log for partition myfleet_sedat001_error_log-0 in /home/thisara/kafka-mars/kafka-logs/myfleet_sedat001_error_log-0 with properties {compression.type -> producer, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, segment.bytes -> 1073741824, retention.ms -> 604800000, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, file.delete.delay.ms -> 60000, max.compaction.lag.ms -> 9223372036854775807, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2021-08-21 10:05:48,684] INFO [Partition myfleet_sedat001_error_log-0 broker=87] No checkpointed highwatermark is found for partition myfleet_sedat001_error_log-0 (kafka.cluster.Partition)
[2021-08-21 10:05:48,684] INFO [Partition myfleet_sedat001_error_log-0 broker=87] Log loaded for partition myfleet_sedat001_error_log-0 with initial high watermark 0 (kafka.cluster.Partition)
[2021-08-21 10:05:48,691] INFO [Log partition=myfleet_sedat001_error_log-1, dir=/home/thisara/kafka-mars/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2021-08-21 10:05:48,692] INFO Created log for partition myfleet_sedat001_error_log-1 in /home/thisara/kafka-mars/kafka-logs/myfleet_sedat001_error_log-1 with properties {compression.type -> producer, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, segment.bytes -> 1073741824, retention.ms -> 604800000, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, file.delete.delay.ms -> 60000, max.compaction.lag.ms -> 9223372036854775807, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2021-08-21 10:05:48,692] INFO [Partition myfleet_sedat001_error_log-1 broker=87] No checkpointed highwatermark is found for partition myfleet_sedat001_error_log-1 (kafka.cluster.Partition)
[2021-08-21 10:05:48,692] INFO [Partition myfleet_sedat001_error_log-1 broker=87] Log loaded for partition myfleet_sedat001_error_log-1 with initial high watermark 0 (kafka.cluster.Partition)
[2021-08-21 10:05:48,692] INFO [ReplicaFetcherManager on broker 87] Removed fetcher for partitions Set(myfleet_sedat001_error_log-1) (kafka.server.ReplicaFetcherManager)
[2021-08-21 10:05:48,692] INFO [ReplicaFetcherManager on broker 87] Added fetcher to broker 88 for partitions Map(myfleet_sedat001_error_log-1 -> InitialFetchState(BrokerEndPoint(id=88, host=192.168.1.8:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2021-08-21 10:05:49,028] INFO [ReplicaFetcher replicaId=87, leaderId=88, fetcherId=0] Truncating partition myfleet_sedat001_error_log-1 to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2021-08-21 10:05:49,028] INFO [Log partition=myfleet_sedat001_error_log-1, dir=/home/thisara/kafka-mars/kafka-logs] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
